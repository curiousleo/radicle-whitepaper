(def password "very secret")
(def store (ref (dict)))

;; self-amending key-val store
(def starting-eval
  (fn [expr]
    (def command (head expr))
    (cond
     (eq? command 'get) (lookup (nth 1 expr) (read-ref store))
     (eq? command 'set) (modify-ref store (fn [s] (insert (nth 1 expr) (nth 2 expr) s)))
     (and (eq? command 'update)
          (eq? (nth 1 expr)
               password))
     (write-ref eval-ref (eval (nth 2 expr)))
     :else (throw 'invalid-command "Valid commands are: 'get', 'set' and 'update'."))))

(write-ref eval-ref starting-eval)
